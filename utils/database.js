const Database = require("better-sqlite3");
const db = new Database("bot_stats.db");

// üèÜ Tworzymy tabelƒô dla czasu g≈Çosowego (je≈õli nie istnieje)
db.exec(`
    CREATE TABLE IF NOT EXISTS voice_time (
        user_id TEXT PRIMARY KEY,
        total_time INTEGER DEFAULT 0,
        last_join INTEGER
    )
`);

// üõ†Ô∏è Sprawdzamy, czy `last_channel` istnieje
const checkColumn = db
  .prepare("PRAGMA table_info(voice_time)")
  .all()
  .some((col) => col.name === "last_channel");

if (!checkColumn) {
  console.log("üîß Dodajƒô kolumnƒô last_channel do voice_time...");
  db.exec(`ALTER TABLE voice_time ADD COLUMN last_channel TEXT DEFAULT NULL;`);
  console.log("‚úÖ Kolumna last_channel zosta≈Ça dodana!");
}

// üî• Tworzymy tabelƒô dla licznika wiadomo≈õci (je≈õli nie istnieje)
db.exec(`
    CREATE TABLE IF NOT EXISTS message_count (
        user_id TEXT PRIMARY KEY,
        total_messages INTEGER DEFAULT 0
    )
`);

// üîç Tworzymy tabelƒô dla kapusi√≥w (je≈õli nie istnieje)
db.exec(`
    CREATE TABLE IF NOT EXISTS kapus_count (
        user_id TEXT PRIMARY KEY,
        total_days INTEGER DEFAULT 0,
        last_given INTEGER
    )
`);

db.exec(`
    CREATE TABLE IF NOT EXISTS emoji_usage (
        emoji TEXT PRIMARY KEY,
        count INTEGER DEFAULT 0
    )
`);

// üéµ Tworzymy tabelƒô dla najczƒô≈õciej s≈Çuchanych piosenek
db.exec(`
    CREATE TABLE IF NOT EXISTS song_stats (
        title TEXT PRIMARY KEY,
        platform TEXT,
        count INTEGER DEFAULT 0
    )
`);

console.log("‚úÖ Baza danych za≈Çadowana!");

module.exports = db;
